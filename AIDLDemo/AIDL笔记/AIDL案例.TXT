客户端与服务器进行通讯，必须定义标准的规范：通过哪个方法，输入什么样的参数，返回什么样的结果

aidl在项目中的应用：
服务器端：首先要创建aidl接口，再新建一个继承了service的类
在这个类中，创建一个ibinder变量，将这个变量用AIDL接口的sub()内部静态方法实例化，并且实现接口里定义的方法
然后将这个iBinder作为onBind()方法的返回值

但是在服务器端这个方法定义成了私有的，必须去告诉客户端，如何进行调用？
答：service的onBind方法是在客户端绑定到该服务时调用，所以在onBind()方法的返回值中返回自己定义的iBinder
这里的自己定义的iBinder实现了AIDL对应的接口下的方法

客户端：
新建一个module
先将加法运算所需要的布局设计好，设计一个button，首先连接服务（要显式连接，用Intent，然后setComponent，里面的类是对应继承了service的那个类），点击button按钮之后用于调用AIDL接口下的类来实现与服务的通信

接下来是aidl部分，客户端与服务器端的接口要保持一致，所以要将刚才新建的aidl文件复制到这个module下
如何拿到服务器端所共享的服务？就是通过连接service服务（Intent显式连接）